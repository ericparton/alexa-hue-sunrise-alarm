/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.djungelorm.alexa.hue.wakeup.timer;

import com.djungelorm.alexa.hue.wakeup.timer.http.alexa.AlexaDevice;
import com.djungelorm.alexa.hue.wakeup.timer.http.alexa.AlexaHttpClient;
import com.djungelorm.alexa.hue.wakeup.timer.http.alexa.AlexaNotification;
import com.github.zeroone3010.yahueapi.Hue;
import com.github.zeroone3010.yahueapi.State;

import java.time.*;
import java.util.Comparator;
import java.util.Timer;
import java.util.TimerTask;

public class App {
    private static AlexaHttpClient alexaHttpClient;
    private static Hue hueHttpClient;

    //TODO: replace System.out.println with logging
    //TODO: set light color to match sunrise
    public static void main(String[] args) {
        alexaHttpClient = new AlexaHttpClient(Configuration.getAlexaAuthenticationCookie());
        hueHttpClient = new Hue(Configuration.getHueBridgeIpAddress(), Configuration.getHueApiKey());

        System.out.println("Starting Alexa Hue Wakeup Timer...");

        var refreshInterval = Configuration.getRefreshInterval();
        var timer = new Timer();

        timer.scheduleAtFixedRate(new AppTask(), 0, refreshInterval);

        System.out.println(String.format("Task scheduled to fire every %d minutes", refreshInterval));
    }

    private static class AppTask extends TimerTask {
        @Override
        public void run() {
            var alexaDeviceName = Configuration.getAlexaDeviceName();

            var alexaDeviceId = alexaHttpClient.getDevices().stream()
                    .filter(alexaDevice -> alexaDevice.getAccountName().equals(alexaDeviceName))
                    .findFirst().map(AlexaDevice::getSerialNumber);

            if (!alexaDeviceId.isPresent()) {
                System.out.println(String.format("No Alexa device named '%s' was found", alexaDeviceName));
                return;
            }

            var now = LocalDateTime.now();
            var sequenceDuration = Configuration.getSequenceDuration();

            var minutesUntilNextAlarm = alexaHttpClient.getNotifications().stream()
                    .filter(alexaNotification -> alexaNotification.getDeviceSerialNumber().equals(alexaDeviceId.get()))
                    .filter(alexaNotification -> alexaNotification.getStatus().equals("ON"))
                    .filter(alexaNotification -> alexaNotification.getType().equals("Alarm"))
                    .map(AlexaNotification::getAlarmTime)
                    .map(alarmTime -> Duration.between(now, alarmTime).toMinutes())
                    .filter(duration -> duration < sequenceDuration)
                    .min(Comparator.naturalOrder());

            if (!minutesUntilNextAlarm.isPresent()) {
                return;
            }

            System.out.println(String.format("Found Alexa alarm scheduled to fire in %d minutes", minutesUntilNextAlarm.get()));

            var roomName = Configuration.getHueRoomName();
            var room = hueHttpClient.getRoomByName(roomName);

            if (!room.isPresent()) {
                System.out.println(String.format("No Hue room named '%s' was found", roomName));
                return;
            }

            var brightness = (int) Math.round((1 - (minutesUntilNextAlarm.get() / (double) sequenceDuration)) * 256);

            System.out.println(String.format("Setting brightness in %s to %d", roomName, brightness));

            room.get().getLights().forEach(light -> {
                light.turnOn();
                light.setBrightness(brightness);
            });
        }
    }
}
